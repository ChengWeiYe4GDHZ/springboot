server:
 port: 8099
 #发生异常的时候会自动把请求转到/error，SpringBoot内置了一个BasicErrorController对异常进行统一的处理，当然也可以自定义这个路径
 #BasicErrorController提供两种返回错误一种是页面返回、当你是页面请求的时候就会返回页面，另外一种是json请求的时候就会返回json错误
 error:
  path: /common/error
logging:
 config: classpath:logback.xml

spring:
  redis:
   database: 1
   host: 127.0.0.1
   port: 6379
   pool:
    max-active: 20

#数据库
spring:
  datasource:
   type: com.alibaba.druid.pool.DruidDataSource
   url: jdbc:mysql://192.168.30.128:3306/Test?useUnicode=true&characterEncoding=utf8
   username: root
   password: root
   driver-class-name: com.mysql.jdbc.Driver
   # 下面为连接池的补充设置，应用到上面所有数据源中
   # 初始化大小，最小，最大
   initialSize: 5
   minIdle: 5
   maxActive: 20
   # 配置获取连接等待超时的时间
   maxWait: 60000
   # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
   timeBetweenEvictionRunsMillis: 60000
   # 配置一个连接在池中最小生存的时间，单位是毫秒
   minEvictableIdleTimeMillis: 300000
   # 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
   validationQuery: SELECT 'x'
   testWhileIdle: true
   testOnBorrow: false
   testOnReturn: false
   # 打开PSCache，并且指定每个连接上PSCache的大小
   poolPreparedStatements: true
   maxPoolPreparedStatementPerConnectionSize: 20
   # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
   filters: stat,wall,logback
   # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
   connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
   # 合并多个DruidDataSource的监控数据
   useGlobalDataSourceStat: true